/// <reference types="../../../lib/node_modules/@types/gameUtil" />
/// <reference types="../../../lib/node_modules/@types/engine" />
declare module "rocker" {
    import { newUiBase } from "PSDUI/newUiBase";
    export class rocker extends newUiBase {
        static Instance: rocker;
        onInit(): void;
        private buttona1_btn_event;
        /**this.buttonb2_img.buttona1_btn.button 的按钮事件*/
        buttona1_btn_btnEvent: () => any;
        private knifea_btn_event;
        /**this.buttonb2_img.knifea_btn.button 的按钮事件*/
        knifea_btn_btnEvent: () => any;
        private bara_btn_event;
        /**this.buttonb2_img.bara_btn.button 的按钮事件*/
        bara_btn_btnEvent: () => any;
        private buttona_btn_event;
        /**this.buttonb_img.buttona_btn.button 的按钮事件*/
        buttona_btn_btnEvent: () => any;
        private rock_btn_event;
        /**this.rockbg_img.rock_btn.button 的按钮事件*/
        rock_btn_btnEvent: () => any;
        /**修改label  this.buttonb2_img.cd_lab.label 修改label文字方法*/
        cd_lab_text(text: string): void;
        uiName: string;
        buttonb2_img: buttonb2_img;
        buttonb_img: buttonb_img;
        rockbg_img: rockbg_img;
    }
    export class buttonb2_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        buttona1_btn: buttona1_btn;
        knifeb_img: knifeb_img;
        knifea_btn: knifea_btn;
        barb_img: barb_img;
        bara_btn: bara_btn;
        /***/
        barcd_img: barcd_img;
        cd_lab: cd_lab;
    }
    export class buttona1_btn {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        button: m4m.framework.button;
    }
    export class knifeb_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
    export class knifea_btn {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        button: m4m.framework.button;
    }
    export class barb_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
    export class bara_btn {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        button: m4m.framework.button;
    }
    export class barcd_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
    export class cd_lab {
        transform: m4m.framework.transform2D;
        label: m4m.framework.label;
    }
    export class buttonb_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        buttona_btn: buttona_btn;
    }
    export class buttona_btn {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        button: m4m.framework.button;
    }
    export class rockbg_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        rock_btn: rock_btn;
    }
    export class rock_btn {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
        button: m4m.framework.button;
    }
}
declare module "rockerView" {
    import { rocker } from "rocker";
    /**
     * 摇杆 按钮 操控 界面
     */
    export class rockerView extends rocker {
        /**其他面板show 时 不隐藏 */
        notHideOnOtherShow: boolean;
        noAffected: boolean;
        /** 当前UI是否会影响场景玩家操作 */
        influenceSceneAction: boolean;
        private joyRoot;
        private viewRoot;
        private joy;
        private jumpBtn1;
        private jumpBtn2;
        private attackBtn;
        private knifeBtn;
        private showAttack;
        private viewToucher;
        private viewToucherPad;
        private _evJoy;
        private _evJoyRelease;
        private _evA;
        private _evB;
        private _evView;
        private _evViewDown;
        private _viewDownPoint;
        private rockbg;
        private joyResetFunBind;
        private bType;
        private _touchEnable;
        private showAttackBtnBind;
        onInit(): void;
        private showAttackBtnFunc;
        private onRockerViewEnable;
        private setTouchsEnable;
        private onFocusResetState;
        private setFocusResetState;
        private setRockerVisible;
        private initJoyStick;
        private joyResetFun;
        private setViewTouch;
        private onSetViewTouch;
        private initBtns;
        private updateFun;
        private onJoyShake;
        private onKnifeAClick;
        private onKnifeAUp;
        private onJoyRelease;
        private onBtnAUPClick;
        private onBtnAClick;
        private onMtaAUPClick;
        private onMtaClick;
        private onMatbaAClick;
        private onMatbaAUp;
        private onBtnBDown;
        private onBtnBUp;
        private onViewDown;
        private onViewTouch;
        private onViewTouchValCg;
        onShowFunc(): void;
        onHideFunc(): void;
        private distroy;
    }
}
//# sourceMappingURL=rocker.d.ts.map