var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
System.register("txtbg", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, txtbg, gamebg, jianbianbg_img, text_lab;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            txtbg = /** @class */ (function (_super) {
                __extends(txtbg, _super);
                function txtbg() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.uiName = "txtbg";
                    /***/
                    _this.gamebg = new gamebg();
                    /***/
                    _this.jianbianbg_img = new jianbianbg_img();
                    return _this;
                }
                txtbg.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                };
                //按钮事件
                //文字修改方法
                /**修改label  this.jianbianbg_img.text_lab.label 修改label文字方法*/
                txtbg.prototype.text_lab_text = function (text) { this.jianbianbg_img.text_lab.label.text = text; };
                return txtbg;
            }(newUiBase_1.newUiBase));
            exports_1("txtbg", txtbg);
            gamebg = /** @class */ (function () {
                function gamebg() {
                }
                return gamebg;
            }());
            exports_1("gamebg", gamebg);
            jianbianbg_img = /** @class */ (function () {
                function jianbianbg_img() {
                    this.text_lab = new text_lab();
                }
                return jianbianbg_img;
            }());
            exports_1("jianbianbg_img", jianbianbg_img);
            text_lab = /** @class */ (function () {
                function text_lab() {
                }
                return text_lab;
            }());
            exports_1("text_lab", text_lab);
        }
    };
});
System.register("txtbgView", ["Data/BindKeyName", "Manager/WaitRoomManager", "Manager/WoodenPeopleManager", "PSDUI/UiDataManager", "txtbg"], function (exports_2, context_2) {
    "use strict";
    var BindKeyName_1, WaitRoomManager_1, WoodenPeopleManager_1, UiDataManager_1, txtbg_1, txtbgView;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (BindKeyName_1_1) {
                BindKeyName_1 = BindKeyName_1_1;
            },
            function (WaitRoomManager_1_1) {
                WaitRoomManager_1 = WaitRoomManager_1_1;
            },
            function (WoodenPeopleManager_1_1) {
                WoodenPeopleManager_1 = WoodenPeopleManager_1_1;
            },
            function (UiDataManager_1_1) {
                UiDataManager_1 = UiDataManager_1_1;
            },
            function (txtbg_1_1) {
                txtbg_1 = txtbg_1_1;
            }
        ],
        execute: function () {
            /*等待人数界面*/
            txtbgView = /** @class */ (function (_super) {
                __extends(txtbgView, _super);
                function txtbgView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    /** 当前UI是否会影响场景玩家操作 */
                    _this.influenceSceneAction = false;
                    return _this;
                }
                // public data: any[];
                txtbgView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this.list = WaitRoomManager_1.WaitRoomManager.Instance.data;
                    this.data = WoodenPeopleManager_1.WoodenPeopleManager.Instance.data;
                    this.max = WaitRoomManager_1.WaitRoomManager.Instance.max;
                    this.newMethod(this.list);
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                    this.EyeVerifyBindFun = this.EyeVerifyFun.bind(this);
                    UiDataManager_1.UiDataManager.bindFunctionData(BindKeyName_1.BindKeyName.EyeVerify, this.EyeVerifyBindFun);
                };
                txtbgView.prototype.onShowFun = function () {
                };
                txtbgView.prototype.onHideFun = function () {
                };
                txtbgView.prototype.onDisposeFun = function () {
                    UiDataManager_1.UiDataManager.unBindFunctionData(BindKeyName_1.BindKeyName.EyeVerify, this.EyeVerifyBindFun);
                };
                txtbgView.prototype.EyeVerifyFun = function (list) {
                    this.newMethod(list);
                };
                txtbgView.prototype.newMethod = function (list) {
                    var data = [];
                    for (var key in list) {
                        var obj = { name: key };
                        data.push(obj);
                    }
                    this.jianbianbg_img.text_lab.label.text = " WAITING FOR OTHER PLAYERS:" + "".concat(data.length, "/").concat(this.max);
                };
                return txtbgView;
            }(txtbg_1.txtbg));
            exports_2("txtbgView", txtbgView);
        }
    };
});
//# sourceMappingURL=txtbg.js.map