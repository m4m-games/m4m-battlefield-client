/// <reference types="../../../lib/node_modules/@types/gameUtil" />
/// <reference types="../../../lib/node_modules/@types/engine" />
declare module "signals" {
    import { newUiBase } from "PSDUI/newUiBase";
    export class signals extends newUiBase {
        static Instance: signals;
        onInit(): void;
        /**修改label 倒计时修改label文字方法*/
        time_lab_text(text: string): void;
        uiName: string;
        /***/
        gamebg: gamebg;
        jianbianbg_img: jianbianbg_img;
        /**倒计时*/
        time_lab: time_lab;
        signalbg: signalbg;
    }
    export class gamebg {
        transform: m4m.framework.transform2D;
    }
    export class jianbianbg_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
    export class time_lab {
        transform: m4m.framework.transform2D;
        label: m4m.framework.label;
    }
    export class signalbg {
        transform: m4m.framework.transform2D;
        signal_img: signal_img;
        number_img: number_img;
        ms_img: ms_img;
    }
    export class signal_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
    export class number_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
    export class ms_img {
        transform: m4m.framework.transform2D;
        image: m4m.framework.image2D;
    }
}
declare module "signalsView" {
    import { uiLayerType } from "PSDUI/UiManager";
    import { imgSpriteArrange } from "UIBase/imgSpriteArrange";
    import { signals } from "signals";
    export class signalsView extends signals {
        uiLayer: uiLayerType;
        NetworkBindFun: any;
        list: import("Net/PingTimeManager").NetworkQualityType;
        proNumImg: imgSpriteArrange;
        main: any;
        datset: any;
        listekas: boolean;
        liste: number;
        manxse: number;
        /** 当前UI是否会影响场景玩家操作 */
        influenceSceneAction: boolean;
        onInit(): void;
        NetworkFun(data: any): void;
        showlist(list: any): void;
        showdata(data: any): void;
        carousel(): void;
        listeka(list: any): void;
    }
}
//# sourceMappingURL=signals.d.ts.map