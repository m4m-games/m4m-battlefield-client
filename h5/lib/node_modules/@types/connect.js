var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
System.register("connect", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, connect, gamebg3_img, gamebg4_img, connect1_btn, connecttext1_lab, text2_lab, cancle_btn, cancletext1_lab, text1_lab, buttonbg, button1_img, icon_img;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            connect = /** @class */ (function (_super) {
                __extends(connect, _super);
                function connect() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.uiName = "connect";
                    _this.gamebg3_img = new gamebg3_img();
                    _this.gamebg4_img = new gamebg4_img();
                    return _this;
                }
                connect.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                    this.gamebg4_img.connect1_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.connect1_btn_event, this);
                    this.gamebg4_img.cancle_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.cancle_btn_event, this);
                };
                //按钮事件
                connect.prototype.connect1_btn_event = function () { if (this.connect1_btn_btnEvent)
                    this.connect1_btn_btnEvent(); };
                ;
                connect.prototype.cancle_btn_event = function () { if (this.cancle_btn_btnEvent)
                    this.cancle_btn_btnEvent(); };
                ;
                //文字修改方法
                /**修改label  this.gamebg4_img.connect1_btn.connecttext1_lab.label 修改label文字方法*/
                connect.prototype.connecttext1_lab_text = function (text) { this.gamebg4_img.connect1_btn.connecttext1_lab.label.text = text; };
                /**修改label  this.gamebg4_img.connect1_btn.text2_lab.label 修改label文字方法*/
                connect.prototype.text2_lab_text = function (text) { this.gamebg4_img.connect1_btn.text2_lab.label.text = text; };
                /**修改label  this.gamebg4_img.cancle_btn.cancletext1_lab.label 修改label文字方法*/
                connect.prototype.cancletext1_lab_text = function (text) { this.gamebg4_img.cancle_btn.cancletext1_lab.label.text = text; };
                /**修改label  this.gamebg4_img.cancle_btn.text1_lab.label 修改label文字方法*/
                connect.prototype.text1_lab_text = function (text) { this.gamebg4_img.cancle_btn.text1_lab.label.text = text; };
                return connect;
            }(newUiBase_1.newUiBase));
            exports_1("connect", connect);
            gamebg3_img = /** @class */ (function () {
                function gamebg3_img() {
                }
                return gamebg3_img;
            }());
            exports_1("gamebg3_img", gamebg3_img);
            gamebg4_img = /** @class */ (function () {
                function gamebg4_img() {
                    this.connect1_btn = new connect1_btn();
                    this.cancle_btn = new cancle_btn();
                    /***/
                    this.buttonbg = new buttonbg();
                }
                return gamebg4_img;
            }());
            exports_1("gamebg4_img", gamebg4_img);
            connect1_btn = /** @class */ (function () {
                function connect1_btn() {
                    this.connecttext1_lab = new connecttext1_lab();
                    this.text2_lab = new text2_lab();
                }
                return connect1_btn;
            }());
            exports_1("connect1_btn", connect1_btn);
            connecttext1_lab = /** @class */ (function () {
                function connecttext1_lab() {
                }
                return connecttext1_lab;
            }());
            exports_1("connecttext1_lab", connecttext1_lab);
            text2_lab = /** @class */ (function () {
                function text2_lab() {
                }
                return text2_lab;
            }());
            exports_1("text2_lab", text2_lab);
            cancle_btn = /** @class */ (function () {
                function cancle_btn() {
                    this.cancletext1_lab = new cancletext1_lab();
                    this.text1_lab = new text1_lab();
                }
                return cancle_btn;
            }());
            exports_1("cancle_btn", cancle_btn);
            cancletext1_lab = /** @class */ (function () {
                function cancletext1_lab() {
                }
                return cancletext1_lab;
            }());
            exports_1("cancletext1_lab", cancletext1_lab);
            text1_lab = /** @class */ (function () {
                function text1_lab() {
                }
                return text1_lab;
            }());
            exports_1("text1_lab", text1_lab);
            buttonbg = /** @class */ (function () {
                function buttonbg() {
                    this.button1_img = new button1_img();
                }
                return buttonbg;
            }());
            exports_1("buttonbg", buttonbg);
            button1_img = /** @class */ (function () {
                function button1_img() {
                    this.icon_img = new icon_img();
                }
                return button1_img;
            }());
            exports_1("button1_img", button1_img);
            icon_img = /** @class */ (function () {
                function icon_img() {
                }
                return icon_img;
            }());
            exports_1("icon_img", icon_img);
        }
    };
});
System.register("connectView", ["Core/blockchain/ConnectWalletManager", "Data/CellData", "Data/Grid", "Data/GridData", "Data/ListModel", "Manager/UIOpenOrHideManager", "Net/WebsocketTool", "connect", "WalletCell"], function (exports_2, context_2) {
    "use strict";
    var ConnectWalletManager_1, CellData_1, Grid_1, GridData_1, ListModel_1, UIOpenOrHideManager_1, WebsocketTool_1, connect_1, WalletCell_1, connectView;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (ConnectWalletManager_1_1) {
                ConnectWalletManager_1 = ConnectWalletManager_1_1;
            },
            function (CellData_1_1) {
                CellData_1 = CellData_1_1;
            },
            function (Grid_1_1) {
                Grid_1 = Grid_1_1;
            },
            function (GridData_1_1) {
                GridData_1 = GridData_1_1;
            },
            function (ListModel_1_1) {
                ListModel_1 = ListModel_1_1;
            },
            function (UIOpenOrHideManager_1_1) {
                UIOpenOrHideManager_1 = UIOpenOrHideManager_1_1;
            },
            function (WebsocketTool_1_1) {
                WebsocketTool_1 = WebsocketTool_1_1;
            },
            function (connect_1_1) {
                connect_1 = connect_1_1;
            },
            function (WalletCell_1_1) {
                WalletCell_1 = WalletCell_1_1;
            }
        ],
        execute: function () {
            /*链接钱包功能界面*/
            connectView = /** @class */ (function (_super) {
                __extends(connectView, _super);
                function connectView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.walletList = new ListModel_1.ListModel();
                    return _this;
                }
                // private ViewData: tloadingViewData;
                connectView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    // //打开当前界面不影响其他界面 TipPanel
                    // this.noAffected = true;
                    //屏蔽UI事件
                    // commTool.makeUIEventDiscard(this.gamebg.transform);
                    this.connect1_btn_btnEvent = this.connectBtnFun.bind(this);
                    //this.connect1_btn.button.addListener(m4m.event.UIEventEnum.PointerDown, this.connectBtnFun, this);
                    this.cancle_btn_btnEvent = this.closeBtnFun.bind(this);
                    //this.cancle_btn.button.addListener(m4m.event.UIEventEnum.PointerDown, this.closeBtnFun, this);
                    // 多语言版本
                    this.text2_lab_text("PLEASE CONNECT TO YOUR WALLET");
                    this.gamebg4_img.connect1_btn.text2_lab.label.fontsize += 5;
                    this.gamebg4_img.connect1_btn.text2_lab.label.color2 = new m4m.math.color(0.5, 0.5, 0.5);
                    this.text1_lab_text("CONNECT TO A WALLET");
                    this.gamebg4_img.cancle_btn.text1_lab.label.fontsize += 5;
                    this.gamebg4_img.cancle_btn.text1_lab.label.color2 = new m4m.math.color(0.5, 0.5, 0.5);
                    this.connecttext1_lab_text("CONNECT");
                    this.gamebg4_img.connect1_btn.connecttext1_lab.label.color2 = new m4m.math.color(1, 1, 1);
                    this.cancletext1_lab_text("CANCEL");
                    this.gamebg4_img.cancle_btn.cancletext1_lab.label.color2 = new m4m.math.color(0.19, 0.19, 0.19);
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                    this.initWalletGrid();
                    this.setWalletData();
                    this.gamebg4_img.buttonbg.transform.visible = false;
                };
                //初始化钱包按钮
                connectView.prototype.initWalletGrid = function () {
                    var lo = m4m.framework.layoutOption;
                    var cellTrans = this.gamebg4_img.buttonbg.button1_img.transform;
                    // cellTrans.layoutState = m4m.framework.layoutOption.LEFT | m4m.framework.layoutOption.V_CENTER;
                    // cellTrans.visible = true;
                    var cellPercentWidth = cellTrans.width;
                    var cellPercentHeight = cellTrans.height;
                    var cellData = new CellData_1.CellData();
                    cellData.width = cellPercentWidth;
                    cellData.height = cellPercentHeight;
                    var gridData = new GridData_1.GridData();
                    gridData.columns = 4;
                    gridData.rows = 2;
                    gridData.offsetX = 60;
                    gridData.offsetY = 60;
                    var initX = cellTrans.getLayoutValue(lo.LEFT);
                    gridData.initXPlace = initX;
                    console.error("initX", gridData.initXPlace);
                    var initY = cellTrans.getLayoutValue(lo.V_CENTER);
                    gridData.initYPlace = initY;
                    gridData.cellName = WalletCell_1.WalletCell.name;
                    gridData.cellData = cellData;
                    gridData.cell = this.gamebg4_img.buttonbg.button1_img;
                    //生成的格子放在父节点
                    gridData.parentTrans = cellTrans.parent;
                    gridData.cellLayoutX = lo.LEFT;
                    gridData.cellLayoutY = lo.V_CENTER;
                    this.grid = new Grid_1.Grid(gridData);
                    this.grid.selectCallBackFun = this.sellectFun.bind(this);
                    cellTrans.visible = false;
                    // this.gamebg4_img.buttonbg.button1_img.transform.setLayoutValue(m4m.framework.layoutOption.LEFT, 100);
                    // this.gamebg4_img.buttonbg.button1_img.transform.markDirty();
                };
                //点击单个钱包
                connectView.prototype.sellectFun = function (index) {
                    // console.error("点击了单个钱包", index);
                    // let walletType = "m";
                    // if (index == 5) {
                    //     walletType = "w";
                    // } else if (index == 6) {
                    //     walletType = "b";
                    // } else if (index == 7) {
                    //     walletType = "o";
                    // } else if (index == 8) {
                    //     walletType = "c";
                    // }
                    // //链接钱包
                    // console.error("StageMgr.agreeAutographbol", StageMgr.agreeAutographbol);
                    // if (StageMgr.agreeAutographbol) {
                    //     console.error("链接钱包");
                    //     StageMgr.connect(walletType);
                    //     // StageMgr.ethSignTypedData();
                    // } else {
                    //     console.error("授权签名");
                    //     // // StageMgr.connect(walletType);
                    //     StageMgr.ethSignTypedData();
                    //     // NetWebscoket.Instance.connect(null, "10.67.30.52", 8004);
                    // }
                };
                //设置钱包数据
                connectView.prototype.setWalletData = function () {
                    var walletArr = [1, 2, 3, 4, 5, 6, 7, 8];
                    this.walletList.setSource(walletArr);
                    this.grid.setListModel(this.walletList);
                    // console.error(this.buttonbg.transform.width, "  --- ", this.grid.getWidth());
                    // let leftDistance = (this.gamebg4_img.buttonbg.transform.width - this.grid.getWidth()) / 2;
                    // this.grid.girdData.initXPlace = leftDistance;
                    // this.grid.reshUIPosFun();
                };
                connectView.prototype.connectBtnFun = function () {
                    console.error("点击链接钱包按钮");
                    ConnectWalletManager_1.ConnectWalletManager.Instance.loginAccount(function (res) {
                        var address = res.address;
                        console.error(res.address);
                        WebsocketTool_1.WebsocketTool.Instance.LoginManager_loginWithOutWallet(address, "123");
                    });
                };
                connectView.prototype.closeBtnFun = function () {
                    // console.error("点击关闭按钮");
                    this.gamebg4_img.connect1_btn.transform.visible = true;
                    this.gamebg4_img.cancle_btn.transform.visible = false;
                    this.gamebg4_img.buttonbg.transform.visible = false;
                };
                connectView.prototype.onShowFun = function () {
                    this.gamebg4_img.connect1_btn.transform.visible = true;
                    this.gamebg4_img.cancle_btn.transform.visible = false;
                    this.gamebg4_img.buttonbg.transform.visible = false;
                    UIOpenOrHideManager_1.UIOpenOrHideManager.Instance.HideTloadingView();
                };
                connectView.prototype.onHideFun = function () {
                };
                connectView.prototype.onDisposeFun = function () {
                    this.gamebg4_img.connect1_btn.button.removeListener(m4m.event.UIEventEnum.PointerDown, this.connectBtnFun, this);
                    this.gamebg4_img.cancle_btn.button.removeListener(m4m.event.UIEventEnum.PointerDown, this.closeBtnFun, this);
                };
                return connectView;
            }(connect_1.connect));
            exports_2("connectView", connectView);
        }
    };
});
System.register("WalletCell", ["Common/CommonCell", "Data/CommonUIUtils", "connectView"], function (exports_3, context_3) {
    "use strict";
    var CommonCell_1, CommonUIUtils_1, connectView_1, WalletCell;
    var __moduleName = context_3 && context_3.id;
    return {
        setters: [
            function (CommonCell_1_1) {
                CommonCell_1 = CommonCell_1_1;
            },
            function (CommonUIUtils_1_1) {
                CommonUIUtils_1 = CommonUIUtils_1_1;
            },
            function (connectView_1_1) {
                connectView_1 = connectView_1_1;
            }
        ],
        execute: function () {
            exports_3("WalletCell", WalletCell = /** @class */ (function (_super) {
                __extends(WalletCell, _super);
                function WalletCell() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                WalletCell.prototype.setCellClass = function (value) {
                    this.nowClass = value;
                    // this.awardNum = commTool.makeImgSpriteArrange(this.nowClass.paiming_img.image);
                    // this.awardNum.transform.layoutState = gd3d.framework.layoutOption.LEFT | gd3d.framework.layoutOption.V_CENTER;
                    // this.awardNum.transform.setLayoutValue(gd3d.framework.layoutOption.LEFT, 550);
                    // this.nowClass.paiming_img.transform.visible = false;
                };
                //选中当前cell 时的fun
                WalletCell.prototype.selectFun = function (selectbool) {
                    _super.prototype.selectFun.call(this, selectbool);
                    // this.nowClass.status2_img.transform.visible = selectbool;
                };
                WalletCell.prototype.setData = function (value) {
                    this.cellData.data = value;
                    console.error("wallet数据", value);
                    if (value) {
                        var iconStr = "";
                        switch (value) {
                            case 1:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_iconmetamask";
                                break;
                            case 2:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_icontrustwallet";
                                break;
                            case 3:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_iconmathwallet";
                                break;
                            case 4:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_icontokenpocket";
                                break;
                            case 5:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_iconwalletconnect";
                                break;
                            case 6:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_iconbinancechainwallet";
                                break;
                            case 7:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_iconontowallet";
                                break;
                            case 8:
                                iconStr = connectView_1.connectView.Instance.uiName + ".atlas.json_iconcloverwallet";
                                break;
                        }
                        this.nowClass.icon_img.image.sprite = CommonUIUtils_1.CommonUIUtils.getSprite(iconStr);
                        this.nowClass.transform.visible = true;
                    }
                    else {
                        this.nowClass.transform.visible = false;
                    }
                };
                WalletCell = __decorate([
                    gd3d.reflect.node2DComponent
                ], WalletCell);
                return WalletCell;
            }(CommonCell_1.CommonCell)));
        }
    };
});
//# sourceMappingURL=connect.js.map