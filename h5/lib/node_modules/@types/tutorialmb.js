var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
System.register("tutorialmb", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, tutorialmb, gamebg1_img, 底盘, 摇杆, walkbg, walk2_img, walk1_img, walk3_lab, runbg, run2_img, run1_img, run3_lab, jumpbg, jump2_img, jump1_lab, close_btn, close1_lab, title1_lab;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            tutorialmb = /** @class */ (function (_super) {
                __extends(tutorialmb, _super);
                function tutorialmb() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.uiName = "tutorialmb";
                    _this.gamebg1_img = new gamebg1_img();
                    _this.底盘 = new 底盘();
                    _this.walkbg = new walkbg();
                    _this.runbg = new runbg();
                    _this.jumpbg = new jumpbg();
                    _this.close_btn = new close_btn();
                    _this.title1_lab = new title1_lab();
                    return _this;
                }
                tutorialmb.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                    this.close_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.close_btn_event, this);
                };
                //按钮事件
                tutorialmb.prototype.close_btn_event = function () { if (this.close_btn_btnEvent)
                    this.close_btn_btnEvent(); };
                ;
                //文字修改方法
                /**修改label  this.walkbg.walk3_lab.label 修改label文字方法*/
                tutorialmb.prototype.walk3_lab_text = function (text) { this.walkbg.walk3_lab.label.text = text; };
                /**修改label  this.runbg.run3_lab.label 修改label文字方法*/
                tutorialmb.prototype.run3_lab_text = function (text) { this.runbg.run3_lab.label.text = text; };
                /**修改label  this.jumpbg.jump1_lab.label 修改label文字方法*/
                tutorialmb.prototype.jump1_lab_text = function (text) { this.jumpbg.jump1_lab.label.text = text; };
                /**修改label  this.close_btn.close1_lab.label 修改label文字方法*/
                tutorialmb.prototype.close1_lab_text = function (text) { this.close_btn.close1_lab.label.text = text; };
                /**修改label  this.title1_lab.label 修改label文字方法*/
                tutorialmb.prototype.title1_lab_text = function (text) { this.title1_lab.label.text = text; };
                return tutorialmb;
            }(newUiBase_1.newUiBase));
            exports_1("tutorialmb", tutorialmb);
            gamebg1_img = /** @class */ (function () {
                function gamebg1_img() {
                }
                return gamebg1_img;
            }());
            exports_1("gamebg1_img", gamebg1_img);
            底盘 = /** @class */ (function () {
                function 底盘() {
                    this.摇杆 = new 摇杆();
                }
                return 底盘;
            }());
            exports_1("\u5E95\u76D8", 底盘);
            摇杆 = /** @class */ (function () {
                function 摇杆() {
                }
                return 摇杆;
            }());
            exports_1("\u6447\u6746", 摇杆);
            walkbg = /** @class */ (function () {
                function walkbg() {
                    this.walk2_img = new walk2_img();
                    this.walk1_img = new walk1_img();
                    this.walk3_lab = new walk3_lab();
                }
                return walkbg;
            }());
            exports_1("walkbg", walkbg);
            walk2_img = /** @class */ (function () {
                function walk2_img() {
                }
                return walk2_img;
            }());
            exports_1("walk2_img", walk2_img);
            walk1_img = /** @class */ (function () {
                function walk1_img() {
                }
                return walk1_img;
            }());
            exports_1("walk1_img", walk1_img);
            walk3_lab = /** @class */ (function () {
                function walk3_lab() {
                }
                return walk3_lab;
            }());
            exports_1("walk3_lab", walk3_lab);
            runbg = /** @class */ (function () {
                function runbg() {
                    this.run2_img = new run2_img();
                    this.run1_img = new run1_img();
                    this.run3_lab = new run3_lab();
                }
                return runbg;
            }());
            exports_1("runbg", runbg);
            run2_img = /** @class */ (function () {
                function run2_img() {
                }
                return run2_img;
            }());
            exports_1("run2_img", run2_img);
            run1_img = /** @class */ (function () {
                function run1_img() {
                }
                return run1_img;
            }());
            exports_1("run1_img", run1_img);
            run3_lab = /** @class */ (function () {
                function run3_lab() {
                }
                return run3_lab;
            }());
            exports_1("run3_lab", run3_lab);
            jumpbg = /** @class */ (function () {
                function jumpbg() {
                    this.jump2_img = new jump2_img();
                    this.jump1_lab = new jump1_lab();
                }
                return jumpbg;
            }());
            exports_1("jumpbg", jumpbg);
            jump2_img = /** @class */ (function () {
                function jump2_img() {
                }
                return jump2_img;
            }());
            exports_1("jump2_img", jump2_img);
            jump1_lab = /** @class */ (function () {
                function jump1_lab() {
                }
                return jump1_lab;
            }());
            exports_1("jump1_lab", jump1_lab);
            close_btn = /** @class */ (function () {
                function close_btn() {
                    this.close1_lab = new close1_lab();
                }
                return close_btn;
            }());
            exports_1("close_btn", close_btn);
            close1_lab = /** @class */ (function () {
                function close1_lab() {
                }
                return close1_lab;
            }());
            exports_1("close1_lab", close1_lab);
            title1_lab = /** @class */ (function () {
                function title1_lab() {
                }
                return title1_lab;
            }());
            exports_1("title1_lab", title1_lab);
        }
    };
});
System.register("tutorialmbView", ["Manager/UIOpenOrHideManager", "Tools/commTool", "tutorialmb"], function (exports_2, context_2) {
    "use strict";
    var UIOpenOrHideManager_1, commTool_1, tutorialmb_1, tutorialmbView;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (UIOpenOrHideManager_1_1) {
                UIOpenOrHideManager_1 = UIOpenOrHideManager_1_1;
            },
            function (commTool_1_1) {
                commTool_1 = commTool_1_1;
            },
            function (tutorialmb_1_1) {
                tutorialmb_1 = tutorialmb_1_1;
            }
        ],
        execute: function () {
            /*手机引导界面*/
            tutorialmbView = /** @class */ (function (_super) {
                __extends(tutorialmbView, _super);
                function tutorialmbView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    /** 当前UI是否会影响场景玩家操作 */
                    _this.influenceSceneAction = true;
                    return _this;
                }
                // private ViewData: tloadingViewData;
                tutorialmbView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    // //打开当前界面不影响其他界面 TipPanel
                    // this.noAffected = true;
                    //屏蔽UI事件
                    commTool_1.commTool.makeUIEventDiscard(this.gamebg1_img.transform);
                    // this.ViewData = new tloadingViewData();
                    //多语言版本
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                    this.close_btn_btnEvent = this.closeBtnFun.bind(this);
                    this.title1_lab_text("CONTROL TUTORIAL");
                    this.title1_lab.label.fontsize += 20;
                    this.close1_lab_text("CLOSE");
                    this.close_btn.close1_lab.label.fontsize += 5;
                    this.close_btn.close1_lab.label.color2 = new m4m.math.color(1, 0.25, 0.40);
                    this.walk3_lab_text("WALK");
                    this.walkbg.walk3_lab.label.fontsize += 5;
                    this.run3_lab_text("RUN");
                    this.runbg.run3_lab.label.fontsize += 5;
                    this.jump1_lab_text("JUMP");
                    this.jumpbg.jump1_lab.label.fontsize += 5;
                    //this.close_btn.button.addListener(m4m.event.UIEventEnum.PointerDown, this.closeBtnFun, this);
                };
                tutorialmbView.prototype.closeBtnFun = function () {
                    UIOpenOrHideManager_1.UIOpenOrHideManager.Instance.HideTutorialmbView();
                    // UIOpenOrHideManager.Instance.OpenHallView();
                };
                tutorialmbView.prototype.onShowFun = function () {
                };
                tutorialmbView.prototype.onHideFun = function () {
                };
                tutorialmbView.prototype.onDisposeFun = function () {
                };
                return tutorialmbView;
            }(tutorialmb_1.tutorialmb));
            exports_2("tutorialmbView", tutorialmbView);
        }
    };
});
//# sourceMappingURL=tutorialmb.js.map