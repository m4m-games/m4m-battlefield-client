var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
System.register("tutorialpc", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, tutorialpc, gamebg1_img, gamebg2_img, title1_lab, close_btn, close1_lab, textbg, mouse_lab, direction_lab, shift_lab, space_lab;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            tutorialpc = /** @class */ (function (_super) {
                __extends(tutorialpc, _super);
                function tutorialpc() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.uiName = "tutorialpc";
                    _this.gamebg1_img = new gamebg1_img();
                    _this.gamebg2_img = new gamebg2_img();
                    _this.title1_lab = new title1_lab();
                    _this.close_btn = new close_btn();
                    _this.textbg = new textbg();
                    return _this;
                }
                tutorialpc.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                    this.close_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.close_btn_event, this);
                };
                //按钮事件
                tutorialpc.prototype.close_btn_event = function () { if (this.close_btn_btnEvent)
                    this.close_btn_btnEvent(); };
                ;
                //文字修改方法
                /**修改label  this.title1_lab.label 修改label文字方法*/
                tutorialpc.prototype.title1_lab_text = function (text) { this.title1_lab.label.text = text; };
                /**修改label  this.close_btn.close1_lab.label 修改label文字方法*/
                tutorialpc.prototype.close1_lab_text = function (text) { this.close_btn.close1_lab.label.text = text; };
                /**修改label  this.textbg.mouse_lab.label 修改label文字方法*/
                tutorialpc.prototype.mouse_lab_text = function (text) { this.textbg.mouse_lab.label.text = text; };
                /**修改label  this.textbg.direction_lab.label 修改label文字方法*/
                tutorialpc.prototype.direction_lab_text = function (text) { this.textbg.direction_lab.label.text = text; };
                /**修改label  this.textbg.shift_lab.label 修改label文字方法*/
                tutorialpc.prototype.shift_lab_text = function (text) { this.textbg.shift_lab.label.text = text; };
                /**修改label  this.textbg.space_lab.label 修改label文字方法*/
                tutorialpc.prototype.space_lab_text = function (text) { this.textbg.space_lab.label.text = text; };
                return tutorialpc;
            }(newUiBase_1.newUiBase));
            exports_1("tutorialpc", tutorialpc);
            gamebg1_img = /** @class */ (function () {
                function gamebg1_img() {
                }
                return gamebg1_img;
            }());
            exports_1("gamebg1_img", gamebg1_img);
            gamebg2_img = /** @class */ (function () {
                function gamebg2_img() {
                }
                return gamebg2_img;
            }());
            exports_1("gamebg2_img", gamebg2_img);
            title1_lab = /** @class */ (function () {
                function title1_lab() {
                }
                return title1_lab;
            }());
            exports_1("title1_lab", title1_lab);
            close_btn = /** @class */ (function () {
                function close_btn() {
                    this.close1_lab = new close1_lab();
                }
                return close_btn;
            }());
            exports_1("close_btn", close_btn);
            close1_lab = /** @class */ (function () {
                function close1_lab() {
                }
                return close1_lab;
            }());
            exports_1("close1_lab", close1_lab);
            textbg = /** @class */ (function () {
                function textbg() {
                    this.mouse_lab = new mouse_lab();
                    this.direction_lab = new direction_lab();
                    this.shift_lab = new shift_lab();
                    this.space_lab = new space_lab();
                }
                return textbg;
            }());
            exports_1("textbg", textbg);
            mouse_lab = /** @class */ (function () {
                function mouse_lab() {
                }
                return mouse_lab;
            }());
            exports_1("mouse_lab", mouse_lab);
            direction_lab = /** @class */ (function () {
                function direction_lab() {
                }
                return direction_lab;
            }());
            exports_1("direction_lab", direction_lab);
            shift_lab = /** @class */ (function () {
                function shift_lab() {
                }
                return shift_lab;
            }());
            exports_1("shift_lab", shift_lab);
            space_lab = /** @class */ (function () {
                function space_lab() {
                }
                return space_lab;
            }());
            exports_1("space_lab", space_lab);
        }
    };
});
System.register("tutorialpcView", ["Manager/UIOpenOrHideManager", "Tools/commTool", "tutorialpc"], function (exports_2, context_2) {
    "use strict";
    var UIOpenOrHideManager_1, commTool_1, tutorialpc_1, tutorialpcView;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (UIOpenOrHideManager_1_1) {
                UIOpenOrHideManager_1 = UIOpenOrHideManager_1_1;
            },
            function (commTool_1_1) {
                commTool_1 = commTool_1_1;
            },
            function (tutorialpc_1_1) {
                tutorialpc_1 = tutorialpc_1_1;
            }
        ],
        execute: function () {
            /*PC引导界面*/
            tutorialpcView = /** @class */ (function (_super) {
                __extends(tutorialpcView, _super);
                function tutorialpcView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    // private ViewData: tloadingViewData;
                    /** 当前UI是否会影响场景玩家操作 */
                    _this.influenceSceneAction = true;
                    return _this;
                }
                tutorialpcView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    // //打开当前界面不影响其他界面 TipPanel
                    // this.noAffected = true;
                    //屏蔽UI事件
                    commTool_1.commTool.makeUIEventDiscard(this.gamebg1_img.transform);
                    // this.ViewData = new tloadingViewData();
                    //多语言版本
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                    this.close_btn_btnEvent = this.closeBtnFun.bind(this);
                    this.title1_lab_text("CONTROL TUTORIAL");
                    this.title1_lab.label.fontsize += 20;
                    this.close1_lab_text("CLOSE");
                    this.close_btn.close1_lab.label.fontsize += 5;
                    this.close_btn.close1_lab.label.color2 = new m4m.math.color(1, 0.25, 0.40);
                    this.direction_lab_text("MOVE");
                    this.textbg.direction_lab.label.fontsize += 5;
                    this.mouse_lab_text("ROTATE CAMERA");
                    this.textbg.mouse_lab.label.fontsize += 5;
                    this.shift_lab_text("SPEED UP");
                    this.textbg.shift_lab.label.fontsize += 5;
                    this.space_lab_text("JUMP");
                    this.textbg.space_lab.label.fontsize += 5;
                    //this.close_btn.button.addListener(m4m.event.UIEventEnum.PointerDown, this.closeBtnFun, this);
                };
                tutorialpcView.prototype.closeBtnFun = function () {
                    UIOpenOrHideManager_1.UIOpenOrHideManager.Instance.HideTutorialpcView();
                    // UIOpenOrHideManager.Instance.OpenHallView();
                    UIOpenOrHideManager_1.UIOpenOrHideManager.Instance.OpenRockerView();
                };
                tutorialpcView.prototype.onShowFun = function () {
                };
                tutorialpcView.prototype.onHideFun = function () {
                };
                tutorialpcView.prototype.onDisposeFun = function () {
                };
                return tutorialpcView;
            }(tutorialpc_1.tutorialpc));
            exports_2("tutorialpcView", tutorialpcView);
        }
    };
});
//# sourceMappingURL=tutorialpc.js.map