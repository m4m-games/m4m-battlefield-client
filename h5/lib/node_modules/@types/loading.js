var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
System.register("loading", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, loading, gamebg_img, title1_img, title2_img;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            loading = /** @class */ (function (_super) {
                __extends(loading, _super);
                function loading() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //按钮事件
                    //文字修改方法
                    _this.uiName = "loading";
                    /***/
                    _this.gamebg_img = new gamebg_img();
                    _this.title1_img = new title1_img();
                    _this.title2_img = new title2_img();
                    return _this;
                }
                loading.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                };
                return loading;
            }(newUiBase_1.newUiBase));
            exports_1("loading", loading);
            gamebg_img = /** @class */ (function () {
                function gamebg_img() {
                }
                return gamebg_img;
            }());
            exports_1("gamebg_img", gamebg_img);
            title1_img = /** @class */ (function () {
                function title1_img() {
                }
                return title1_img;
            }());
            exports_1("title1_img", title1_img);
            title2_img = /** @class */ (function () {
                function title2_img() {
                }
                return title2_img;
            }());
            exports_1("title2_img", title2_img);
        }
    };
});
System.register("loadingView", ["PSDUI/UiManager", "Tools/commTool", "loading"], function (exports_2, context_2) {
    "use strict";
    var UiManager_1, commTool_1, loading_1, loadingView;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (UiManager_1_1) {
                UiManager_1 = UiManager_1_1;
            },
            function (commTool_1_1) {
                commTool_1 = commTool_1_1;
            },
            function (loading_1_1) {
                loading_1 = loading_1_1;
            }
        ],
        execute: function () {
            /**加载界面*/
            loadingView = /** @class */ (function (_super) {
                __extends(loadingView, _super);
                function loadingView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    /**其他面板show 时 不隐藏 */
                    _this.notHideOnOtherShow = true;
                    /**打开时不影响其他uiPage */
                    _this.noAffected = true;
                    _this.uiLayer = UiManager_1.uiLayerType.poplayer;
                    return _this;
                }
                loadingView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    //屏蔽UI事件
                    commTool_1.commTool.makeUIEventDiscard(this.gamebg_img.transform);
                    //多语言版本
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                };
                loadingView.prototype.onShowFun = function () {
                    console.error("显示loading界面");
                };
                loadingView.prototype.onHideFun = function () {
                };
                loadingView.prototype.onDisposeFun = function () {
                };
                return loadingView;
            }(loading_1.loading));
            exports_2("loadingView", loadingView);
        }
    };
});
//# sourceMappingURL=loading.js.map